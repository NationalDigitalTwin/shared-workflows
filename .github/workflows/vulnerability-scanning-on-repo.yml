name: Vulnerability Scanning on Repo
on:
  workflow_call:
    inputs:
      APP_NAME:
        required: true
        type: string
        description: The Name of the app being checked
        default: test
      working-directory:
        required: false
        default: .
        type: string
      #      vuln-type:
      #        required: false
      #        default: 'library'
      #        description: 'comma-separated list of vulnerability types (os,library)'

env:
  BOM_FILE_PATH: "${{ inputs.working-directory }}/${{ inputs.APP_NAME }}.sbom.json"

jobs:
  generate_bom:
    defaults:
      run:
        working-directory: ${{ inputs.working-directory }}
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4
      - name: Get version from package.json
        uses: martinbeentjes/npm-get-version-action@main
        id: package-version
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: "20"
      - name: Get node version
        id: node
        run: |
          echo "version=$(node -v)" >> $GITHUB_OUTPUT
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "dir=$(yarn cache dir)" >> $GITHUB_OUTPUT
      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-node_modules-${{ hashFiles('**/yarn.lock') }}-${{ steps.node.outputs.version }}
      - run: |
          yarn install
          yarn global add @cyclonedx/cyclonedx-npm
          cyclonedx-npm --output-file ${{ env.BOM_FILE_PATH }}

      - name: Upload SBOM artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ github.run_number }}-sbom.json
          path: ${{ env.BOM_FILE_PATH }}
  run_low_risk_vulnerability_scanner:
    needs:
      - generate_bom
    runs-on: ubuntu-latest
    steps:
      - name: Download artifact       
        uses: actions/download-artifact@v4
        with:
          name: ${{ github.run_number }}-sbom.json
      - name: Scan SBOM
        uses: aquasecurity/trivy-action@master
        with:
          exit-code: '0'
          severity: 'UNKNOWN,LOW,MEDIUM'
          ignore-unfixed: true
          # https://github.com/aquasecurity/trivy-action/pull/314
          scan-ref: ${{ env.BOM_FILE_PATH }}
          scan-type: 'sbom'
          scanners: 'vuln'
  run_high_risk_vulnerability_scanner:
    needs:
      - generate_bom
    runs-on: ubuntu-latest
    steps:
      - name: Download artifact       
        uses: actions/download-artifact@v4
        with:
          name: ${{ github.run_number }}-sbom.json
      - name: 
        uses: aquasecurity/trivy-action@master
        with:
          exit-code: '1'
          severity: 'HIGH,CRITICAL'
          ignore-unfixed: true
          # https://github.com/aquasecurity/trivy-action/pull/314
          scan-ref: ${{ env.BOM_FILE_PATH }}
          scan-type: 'sbom'
          scanners: 'vuln'
  write_sbom_to_repo:
    needs:
      - run_low_risk_vulnerability_scanner
      - run_high_risk_vulnerability_scanner
    steps:
      - name: Download artifact       
        uses: actions/download-artifact@v4
        with:
          name: ${{ github.run_number }}-sbom.json
      - name: commit and push SBOM
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add ${{ env.BOM_FILE_PATH }}
          git commit -m "chore: added sbom file"
      - name: Push changes
        uses: ad-m/github-push-action@v0.6.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref_name }
